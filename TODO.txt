write tests
    *damgaardjurik.py
        *key generation
        *encryption
        *decryption
        *decoding and encoding of byte streams
        *handling of *DamgaardJurikPlaintext and *DamgaardJurikCiphertext classes
        *homomophisms
            *casting
            *addition
                *__add__
                *__radd__
            *subtraction
                *__sub__
                *__rsub__
            *multiplication
                *__mul__
                *__rmul__
            *division
                *__div__
                *__truediv__
            *negation
                *__neg__
        *pickling and state storage
    intbytes.py
        standard vectors (empty vectors, zero int)
        random vectors
    keccak.py
        *simplex
        duplex
        *KeccakRandom
        *KeccakCipher
            *valid encryption/decryption cycle
            *changed ciphertext results in mac not checking out
        unpadding
    mnemonic.py
        standard vectors
        random vectors
        durability
            transcription errors
            length errors
            checksum errors
            recovery?
    oaep.py
        find standard vectors
        standard vectors
        random vectors
        timing
        durability
fix timing attacks in Damgaard-Jurik
see if Damgaard-Jurik should be using safe primes
*implement division in DamgaardJurikCiphertext
check for bad uses of == and !=
check for bad uses of raise
support any object that implements the buffer protocol
